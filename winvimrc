" Ustawienie $VIMRUNTIME i runtimepath,
" potrzebne do dzialania lokalnego vima 7.4.x:
let $VIMRUNTIME="/app/vim/7.4.005/LMWP3/share/vim/vim74"
set runtimepath=~/.vim,/usr/share/vim/vimfiles/,/app/vim/7.4.005/LMWP3/share/vim/vim74,/usr/share/vim/vimfiles/after

map <C-n> :NERDTreeToggle<CR> 
" ogolne
set nu                            " numerowanie lini
set expandtab                     " spacje zamiast tabulatora
set tabstop=2                     " 
set shiftwidth=2                  " ilosc(2) spacji zamiast tabulatora 
set softtabstop=2                 " 
set mouse=a                       " zaznaczanie za pomoca myszki
set nocompatible                  " Wylaczenie Vi-compatible mode
set ruler                         " linijka(aktualny numer linii i kolumny, %)
set rulerformat=%l,%c%V%=#%n\ %3p%% " ustaw zawartosc linii statusu

" do wyszukiwania:
set ignorecase			              " ignoruj wielkosc znakow
set smartcase                     " jesli uzyjesz duzej litery to bedzie uwzglednial wielkosc liter
set incsearch                     " Highlight matching text while typing.
set hlsearch                      " Highlight all matching patterns.

syntax on                         " Highlight the syntax.
set fileencodings=ucs-bom,utf-8,latin1 "ustawienia kodowania plików
set noswapfile			              " Disable swap file
set backupcopy=no                 " Do not create backup copies
set formatoptions=tcqr            " Adjust automatic formatting
set backspace=indent,eol,start    " Specify the backspace behavior.
set history=1000                  " Specify the number of possible undos.
set nospell                       " Disable spell checking by default.

filetype on                       " Enable file type detection.
filetype plugin on                " Enable file type plug-ins.
filetype plugin indent on         " wlacza autoladowanie wciec i wtyczek dla poszczególnych typów plików

" cscope(nie uzywam)
" set cscopeprg=/usr/bin/cscope
" set cscopetag
" set cscopeverbose
" set guicursor=n-v-c:block,o:hor50,i-ci:hor15,r-cr:hor30,sm:block,a:blinkon0  "zmienia ustawienia kursora

"Editing settings:
set textwidth=0                   " Do not set the default text width.
set wrap                          " Wrap the displayed text.
set linebreak                     " Break lines at a word boundary.
set nojoinspaces                  " Do not insert a second space after a sentence when joining lines.
set autoindent                    " Copy ident from previous lin when starting a new one
set confirm                       " pytaj o potwierdzenie, zamiast odmawiania wykonania operacji
set cursorline                    " podswietla aktualna linie
set hidden                        " ukryj wszystkie 'nieaktywne' bufory, zamiast usuwania z pamieci
set laststatus=2                  " zawsze pokazuj pasek statusu
set lazyredraw                    " nie przerysowuj ekranu podczas wykonywania makr, rejestrów itp.
set scrolloff=5                   " zawsze widoczne 5 linii przed i po kursorze
set listchars=tab:*-,trail:·      " ustaw znaki zastepujace znak tabulatora i biale znaki na koncach linii
set showbreak=>                   " lancuch znakow ktore pokazywane sa by oznaczyc zwiniete linie
set showcmd                       " pokazuj ostatnia wykonywana komende w ostatniej linii edytora
set showmatch                     " gdy zostanie wpisany zamykajacy nawias skocz na chwile do otwierajacego
set spelllang=pl,en               " ustawinia sprawdzania pisowni
set viewoptions=cursor            " zapisuj w widoku tylko pozycje kursora
set viminfo='20,<1000,h,f0        " Konfiguracja informacji zapisywanych w pliku .viminfo
set wildmenu                      " Pokazuje liste mozliwych dopenien na pasku statusu

" colorscheme
set t_Co=256                      " 256 kolorow
set background=dark               " ciemne tlo
colorscheme herald                " herald


" ustawienie kursora w miejscu gdzie byl przed zamknieciem pliku
autocmd BufReadPost * if line("'\"") && line("'\"") <= line("$") |
   \ exe "normal `\"" | endif

" pathogen
execute pathogen#infect()

"NERDTree
let g:NERDTreeDirArrowExpandable = '>' " znaki uzywane jako strzalki w nerdtree
let g:NERDTreeDirArrowCollapsible = 'v' " 
autocmd vimenter * NERDTree       " autorun
autocmd VimEnter * wincmd p       " po odpaleniu pliku kursor w workspace
" autoclose NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

nmap <F5> :q<CR>

"Tagbar
let g:tagbar_ctags_bin='/home/edamchm/bin/ctags' 
nmap <C-l> :Tagbar<CR>


" autocompletion
au BufNewFile,BufRead,BufEnter *.cpp,*.hpp,*.cc,*.h set omnifunc=omni#cpp#complete#Main


" configure tags - add additional tags here or comment out not-used ones

set tags+=~/.vim/tags/cpp

" build tags of your own project with Ctrl-F12



map <C-F12> :w <bar> :!ctags -R --sort=yes --c++-kinds=+pl --fields=+iaS --extra=+q .<CR>


" build tags of your own project with Ctrl-F12 
map <C-F12>:w <bar> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR> 
" OmniCppComplete 
let OmniCpp_NamespaceSearch = 1 
let OmniCpp_GlobalScopeSearch = 1 
let OmniCpp_ShowAccess = 1 
let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters 
let OmniCpp_MayCompleteDot = 1 " autocomplete after . 
let OmniCpp_MayCompleteArrow = 1 " autocomplete after -> 
let OmniCpp_MayCompleteScope = 1 " autocomplete after :: 
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif 
set completeopt=menuone,menu,longest,preview

set nocp

filetype plugin on

inoremap <C-j> <C-x><C-o>

